<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ORDERS (Online assignment1 DATASET)' inline='true' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Online assignment1 DATASET' name='excel-direct.1es943x05z1gcp13ox0o11asqcgo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ganguly Kumar/Downloads/Online assignment1 DATASET.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ORDERS].[Order ID]' />
              <expression op='[RETURNS].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1es943x05z1gcp13ox0o11asqcgo' name='ORDERS' table='[ORDERS$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1es943x05z1gcp13ox0o11asqcgo' name='RETURNS' table='[RETURNS$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ORDERS].[Order ID]' />
              <expression op='[RETURNS].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1es943x05z1gcp13ox0o11asqcgo' name='ORDERS' table='[ORDERS$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1es943x05z1gcp13ox0o11asqcgo' name='RETURNS' table='[RETURNS$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[ORDERS].[Category]' />
          <map key='[City]' value='[ORDERS].[City]' />
          <map key='[Country]' value='[ORDERS].[Country]' />
          <map key='[Customer ID]' value='[ORDERS].[Customer ID]' />
          <map key='[Customer Name]' value='[ORDERS].[Customer Name]' />
          <map key='[Discount]' value='[ORDERS].[Discount]' />
          <map key='[Market]' value='[ORDERS].[Market]' />
          <map key='[Order Date]' value='[ORDERS].[Order Date]' />
          <map key='[Order ID (RETURNS)]' value='[RETURNS].[Order ID]' />
          <map key='[Order ID]' value='[ORDERS].[Order ID]' />
          <map key='[Order Priority]' value='[ORDERS].[Order Priority]' />
          <map key='[Postal Code]' value='[ORDERS].[Postal Code]' />
          <map key='[Product ID]' value='[ORDERS].[Product ID]' />
          <map key='[Product Name]' value='[ORDERS].[Product Name]' />
          <map key='[Profit]' value='[ORDERS].[Profit]' />
          <map key='[Quantity]' value='[ORDERS].[Quantity]' />
          <map key='[Region (RETURNS)]' value='[RETURNS].[Region]' />
          <map key='[Region]' value='[ORDERS].[Region]' />
          <map key='[Returned]' value='[RETURNS].[Returned]' />
          <map key='[Row ID]' value='[ORDERS].[Row ID]' />
          <map key='[Sales]' value='[ORDERS].[Sales]' />
          <map key='[Segment]' value='[ORDERS].[Segment]' />
          <map key='[Ship Date]' value='[ORDERS].[Ship Date]' />
          <map key='[Ship Mode]' value='[ORDERS].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[ORDERS].[Shipping Cost]' />
          <map key='[State]' value='[ORDERS].[State]' />
          <map key='[Sub-Category]' value='[ORDERS].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (RETURNS)]</local-name>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (RETURNS)]</local-name>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='Day to ship' datatype='integer' name='[Calculation_852024762981941248]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE([Ship Date])-DATE([Order Date])' />
      </column>
      <column caption='Early/Late condition' datatype='string' name='[Calculation_852024763022495746]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Ship Mode] =&apos;First Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=2 THEN&#13;&#10;&apos;Shipped on Time in First Class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in First class mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Same Day&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;1 THEN&#13;&#10;&apos;Shipped on Time on Same Day mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in same day mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Second Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=3 THEN&#13;&#10;&apos;Shipped on Time in Second class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in Second class mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Standard Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=5 THEN&#13;&#10;&apos;Shipped on Time in Standard class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in Standard class mode&apos;&#13;&#10;END&#13;&#10;ELSE &apos;Shipped in many days&apos;&#13;&#10;END' />
      </column>
      <column caption='Late/Early Ship Mode wise' datatype='string' name='[Calculation_852024763039072259]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Ship Mode] =&apos;First Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=2 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Same Day&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;1 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Second Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=3 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Standard Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=5 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSE &apos;Shipped in many days&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Market]' role='dimension' type='nominal' />
      <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Returned]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='No' />
        </aliases>
      </column>
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ORDERS' datatype='table' name='[__tableau_internal_object_id__].[ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_852024762981941248]' derivation='Avg' name='[avg:Calculation_852024762981941248:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_852024762981941248]' derivation='Count' name='[cnt:Calculation_852024762981941248:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='CountD' name='[ctd:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country Set]' derivation='InOut' name='[io:Country Set:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Low profit Countries' />
          <alias key='true' value='Top profit Countries' />
        </aliases>
      </column-instance>
      <column-instance column='[Time to Deliver Set]' derivation='InOut' name='[io:Time to Deliver Set:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Late Deliveries' />
          <alias key='true' value='Early Deliveries' />
        </aliases>
      </column-instance>
      <column-instance column='[Calculation_852024763022495746]' derivation='None' name='[none:Calculation_852024763022495746:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_852024763039072259]' derivation='None' name='[none:Calculation_852024763039072259:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
      <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Top countries By Profit/sales' name='[Country Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Country]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;United Kingdom&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
        </groupfilter>
      </group>
      <group caption='Early/Late Deliveries' name='[Time to Deliver Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Calculation_852024762981941248]' member='0' />
          <groupfilter function='member' level='[Calculation_852024762981941248]' member='1' />
          <groupfilter function='member' level='[Calculation_852024762981941248]' member='2' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State/region'>
          <field>[State]</field>
          <field>[Region]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_852024763022495746:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Deliverd on Time in Second class mode&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Not Delivered on time in First class mode&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Delivered on Time in First Class mode&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Not delivered on time in Standard class mode&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deliverd on Time on Same Day mode&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Not delivered on time in Second class mode&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deliverd on Time in Standard class mode&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Not delivered on time in same day mode&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4f9e53'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#76af56'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Country Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Market:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;USCA&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Asia Pacific&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;LATAM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[cnt:Calculation_852024762981941248:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[avg:Calculation_852024762981941248:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Discount:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Time to Deliver Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' palette='summer_10_0' type='palette'>
            <map to='#8fb202'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Order Priority:nk]' palette='summer_10_0' type='palette'>
            <map to='#8fb202'>
              <bucket>&quot;Critical&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' palette='summer_10_0' type='palette'>
            <map to='#59a14f'>
              <bucket>%all%</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Returned:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#eb1e2c'>
              <bucket>%null%</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_852024763039072259:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;EARLY&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;LATE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ORDERS' id='ORDERS_CB6035E5A06447F5A6D08DBE9DB0E0A8'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[ORDERS].[Order ID]' />
                    <expression op='[RETURNS].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.1es943x05z1gcp13ox0o11asqcgo' name='ORDERS' table='[ORDERS$]' type='table'>
                  <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='integer' name='Postal Code' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='string' name='Country' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Market' ordinal='13' />
                    <column datatype='string' name='Product ID' ordinal='14' />
                    <column datatype='string' name='Category' ordinal='15' />
                    <column datatype='string' name='Sub-Category' ordinal='16' />
                    <column datatype='string' name='Product Name' ordinal='17' />
                    <column datatype='real' name='Sales' ordinal='18' />
                    <column datatype='integer' name='Quantity' ordinal='19' />
                    <column datatype='real' name='Discount' ordinal='20' />
                    <column datatype='real' name='Profit' ordinal='21' />
                    <column datatype='real' name='Shipping Cost' ordinal='22' />
                    <column datatype='string' name='Order Priority' ordinal='23' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1es943x05z1gcp13ox0o11asqcgo' name='RETURNS' table='[RETURNS$]' type='table'>
                  <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='string' name='Region' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' Q2 ) i)More Discount More Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt; </run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Æ </run>
            <run bold='true' fontcolor='#000000' fontsize='16'>Yes, It is visible from above graph is when there is more discount more sales are occured.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]' value='149' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Discount:qk]' />
              <lod column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Discount:qk] + [federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk])</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{0603B062-303D-4F3F-817A-F65340D52053}' />
    </worksheet>
    <worksheet name='Q1)i)Are customers getting their products delivered in the same mode as they have selected? '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>No, As seen in the graph yellow pies are not delivered in same mode as they have selected</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column aggregation='Sum' caption='Day to ship' datatype='integer' name='[Calculation_852024762981941248]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE([Ship Date])-DATE([Order Date])' />
            </column>
            <column caption='Late/Early Ship Mode wise' datatype='string' name='[Calculation_852024763039072259]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Ship Mode] =&apos;First Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=2 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Same Day&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;1 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Second Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=3 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Standard Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=5 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSE &apos;Shipped in many days&apos;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_852024762981941248]' derivation='None' name='[none:Calculation_852024762981941248:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_852024763039072259]' derivation='None' name='[none:Calculation_852024763039072259:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_852024763039072259:nk]' member='&quot;EARLY&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763039072259:nk]' member='&quot;LATE&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Same Day&quot;</bucket>
              <bucket>&quot;First Class&quot;</bucket>
              <bucket>&quot;Second Class&quot;</bucket>
              <bucket>&quot;Standard Class&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]' value='137' />
            <format attr='width' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]' value='84' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]</cols>
      </table>
      <simple-id uuid='{E9159CFC-B6CA-4F10-8078-7868B4D4461A}' />
    </worksheet>
    <worksheet name='Q1)ii)Are customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Q1)ii)Are customers priority is being in taken care? </run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>Yes, Customers priority is bring in taken care as critical, high, medium and low is getting shipped within 3,5 and 7 days respectively</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column aggregation='Sum' caption='Day to ship' datatype='integer' name='[Calculation_852024762981941248]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE([Ship Date])-DATE([Order Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_852024762981941248]' derivation='None' name='[none:Calculation_852024762981941248:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order Priority:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Order ID:qk]</rows>
        <cols>([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order Priority:nk] / [federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok])</cols>
      </table>
      <simple-id uuid='{89760A67-79D9-4CED-BFC9-BD96A2376FF5}' />
    </worksheet>
    <worksheet name='Q1)iii)How many times customer faced problem during product delivery? '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>In standard mode most of the people are facing problem during product delivery due to late delivery.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column caption='Early/Late condition' datatype='string' name='[Calculation_852024763022495746]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Ship Mode] =&apos;First Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=2 THEN&#13;&#10;&apos;Shipped on Time in First Class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in First class mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Same Day&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;1 THEN&#13;&#10;&apos;Shipped on Time on Same Day mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in same day mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Second Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=3 THEN&#13;&#10;&apos;Shipped on Time in Second class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in Second class mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Standard Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=5 THEN&#13;&#10;&apos;Shipped on Time in Standard class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in Standard class mode&apos;&#13;&#10;END&#13;&#10;ELSE &apos;Shipped in many days&apos;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_852024763022495746]' derivation='None' name='[none:Calculation_852024763022495746:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in First class mode&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in Second class mode&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in Standard class mode&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in same day mode&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Order ID:qk]</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{F7400E81-B005-4809-9745-56405960DCA6}' />
    </worksheet>
    <worksheet name='Q1)iv)Do late delivery lead to returning of the product? '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Q1)iv)Do late delivery lead to returning of the product? </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>No, As seen from graph very few products are being returned in late delivery maximum orders are not returned.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column aggregation='Sum' caption='Day to ship' datatype='integer' name='[Calculation_852024762981941248]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE([Ship Date])-DATE([Order Date])' />
            </column>
            <column caption='Early/Late condition' datatype='string' name='[Calculation_852024763022495746]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Ship Mode] =&apos;First Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=2 THEN&#13;&#10;&apos;Shipped on Time in First Class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in First class mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Same Day&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;1 THEN&#13;&#10;&apos;Shipped on Time on Same Day mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in same day mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Second Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=3 THEN&#13;&#10;&apos;Shipped on Time in Second class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in Second class mode&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Standard Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=5 THEN&#13;&#10;&apos;Shipped on Time in Standard class mode&apos;&#13;&#10;ELSE &apos;Not Shipped on time in Standard class mode&apos;&#13;&#10;END&#13;&#10;ELSE &apos;Shipped in many days&apos;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No' />
              </aliases>
            </column>
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='CountD' name='[ctd:Product Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_852024762981941248]' derivation='None' name='[none:Calculation_852024762981941248:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_852024763022495746]' derivation='None' name='[none:Calculation_852024763022495746:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in First class mode&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in Second class mode&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in Standard class mode&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763022495746:nk]' member='&quot;Not Shipped on time in same day mode&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]' value='79' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Returned:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Product Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Product Name:qk]</rows>
        <cols>([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Returned:nk] / ([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk] / [federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]))</cols>
      </table>
      <simple-id uuid='{37D22F47-0191-43E4-9FE2-72AAC02C2D8C}' />
    </worksheet>
    <worksheet name='Q1)v)Does delivery to some define regions or state have delivery problems?'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt; </run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>No, As seen in the pie chart of the map, maximum orders are getting shipped early in every regions and only few orders are late.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column caption='Late/Early Ship Mode wise' datatype='string' name='[Calculation_852024763039072259]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Ship Mode] =&apos;First Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=2 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Same Day&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;1 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Second Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=3 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSEIF [Ship Mode] =&apos;Standard Class&apos; THEN&#13;&#10;IF  DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt;=5 THEN&#13;&#10;&apos;EARLY&apos;&#13;&#10;ELSE &apos;LATE&apos;&#13;&#10;END&#13;&#10;ELSE &apos;Shipped in many days&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_852024763039072259]' derivation='None' name='[none:Calculation_852024763039072259:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_852024763039072259:nk]' member='&quot;EARLY&quot;' />
              <groupfilter function='member' level='[none:Calculation_852024763039072259:nk]' member='&quot;LATE&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Longitude (generated)]' field-type='quantitative' max='20164637.853994608' min='-14662808.959320419' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Latitude (generated)]' field-type='quantitative' max='11615802.072055396' min='-9093939.5806701276' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]' />
              <size column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[cnt:Order ID:qk]' />
              <lod column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]' />
              <lod column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:State:nk]' />
              <lod column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.86756908893585205' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Latitude (generated)]</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6226D8F8-96E0-4997-9A4C-602444102CA4}' />
    </worksheet>
    <worksheet name='Q2)ii)More Discount more Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; &#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='16'>Yes, More discount is giving more profit as visible from the graph.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]' value='158' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Discount:qk] + [federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Profit:qk])</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{84CD3315-1353-444D-9E3A-44C7D352DD59}' />
    </worksheet>
    <worksheet name='Q2)iii)Early Delivery more Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; &#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>No, Early Delivery not giving more sales as sales are more at 4th and 5th days </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column aggregation='Sum' caption='Day to ship' datatype='integer' name='[Calculation_852024762981941248]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE([Ship Date])-DATE([Order Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Time to Deliver Set]' derivation='InOut' name='[io:Time to Deliver Set:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Late Deliveries' />
                <alias key='true' value='Early Deliveries' />
              </aliases>
            </column-instance>
            <column-instance column='[Calculation_852024762981941248]' derivation='None' name='[none:Calculation_852024762981941248:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Time to Deliver Set:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]</cols>
      </table>
      <simple-id uuid='{FEA91D1F-4C97-4B25-BDC8-29DC59BB0C13}' />
    </worksheet>
    <worksheet name='Q2)iv)More Products More sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; &#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>No, More products is not giving more sales as seen in the graph Office Supplies having more products and lowest sale.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='CountD' name='[ctd:Product Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]' value='208' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Product Name:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Product Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk] + [federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Product Name:qk])</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{105DAEC3-39E5-4935-9351-9621A2C31F10}' />
    </worksheet>
    <worksheet name='Q2)v)Bigger Market More Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>No, Asia Pacific having highest sale but In the case of Latam sale is lower than USCA. So, bigger market is not giving more sales</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer ID]' derivation='CountD' name='[ctd:Customer ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]' value='118' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Customer ID:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Customer ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk] + [federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Customer ID:qk])</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]</cols>
      </table>
      <simple-id uuid='{DCC8A8F2-CBEA-4171-9911-E467FF93A6B8}' />
    </worksheet>
    <worksheet name='Q3'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='16'>This </run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='16'>part of globe he should invest to earn more profit as these contries having highest sales.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Longitude (generated)]' field-type='quantitative' max='17129287.438496448' min='-17129287.438496448' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Latitude (generated)]' field-type='quantitative' max='10018754.17139462' min='-10018754.17139462' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]' />
              <text column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]' />
              <lod column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.066298246383667' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Latitude (generated)]</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{05F3AB44-B933-489B-B1E7-88D39F52BCE6}' />
    </worksheet>
    <worksheet name='Q3)2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.1sgw6ox0i2ak1g1296vul1vq5pus' />
          </datasources>
          <datasource-dependencies datasource='federated.1sgw6ox0i2ak1g1296vul1vq5pus'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country Set]' derivation='InOut' name='[io:Country Set:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Low profit Countries' />
                <alias key='true' value='Top profit Countries' />
              </aliases>
            </column-instance>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Country Set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Country Set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Country Set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Sales:qk] + [federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Profit:qk])</rows>
        <cols>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{79A47738-126C-48A8-9358-983A8AD118E9}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Q1)i)Are customers getting their products delivered in the same mode as they have selected? '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Time to Deliver Set]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order ID (RETURNS):nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order ID:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB129A9A-086A-4AB7-927F-98F044A497B7}' />
    </window>
    <window class='worksheet' name='Q1)ii)Are customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order Priority:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='105'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order ID:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order Priority:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D28F37D7-7FD8-4767-A787-BEDCF22F3A68}' />
    </window>
    <window class='worksheet' name='Q1)iii)How many times customer faced problem during product delivery? '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='109'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order ID:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20AB0290-F9A8-44E6-9F20-3DE949135AF7}' />
    </window>
    <window class='worksheet' name='Q1)iv)Do late delivery lead to returning of the product? '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Returned:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='116'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Product Name:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Returned:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D741A748-E132-4CCD-8736-D5AFAF171C70}' />
    </window>
    <window class='worksheet' name='Q1)v)Does delivery to some define regions or state have delivery problems?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[cnt:Order ID:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='108'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[Time to Deliver Set]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[ctd:Order ID:qk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763022495746:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024763039072259:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Order ID:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Region (RETURNS):nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Region:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D54B7857-0CC2-4AE6-9F82-575EEACB99F1}' />
    </window>
    <window class='worksheet' name=' Q2 ) i)More Discount More Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Sub-Category:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64326CF0-70C6-4D61-A833-0B319B87C90D}' />
    </window>
    <window class='worksheet' name='Q2)ii)More Discount more Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC1B4CBC-3F8E-4E73-A1F3-1C8A47C0E7BD}' />
    </window>
    <window class='worksheet' name='Q2)iii)Early Delivery more Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Time to Deliver Set:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Time to Deliver Set:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Calculation_852024762981941248:ok]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Ship Mode:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[tyr:Order Date:ok]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54C86980-3BDE-49DA-BBC1-20510A3F2EFB}' />
    </window>
    <window class='worksheet' name='Q2)iv)More Products More sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='108'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Product Name:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75C0E366-B1B0-4BC0-BA7F-CD0C97CA8B6D}' />
    </window>
    <window class='worksheet' name='Q2)v)Bigger Market More Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[:Measure Names]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Category:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Customer ID:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D28FC275-BC1A-4A7A-94E4-340A11B6160B}' />
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Country:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Market:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AA47C25-4129-4972-8A56-EED28C8547A2}' />
    </window>
    <window class='worksheet' name='Q3)2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Country Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[io:Country Set:nk]</field>
            <field>[federated.1sgw6ox0i2ak1g1296vul1vq5pus].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38C09287-F630-43D5-B4E3-16BF4235A7C9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Q2 ) i)More Discount More Sales' width='192'>
      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
      rpzHYv0/8XhYBLl0bUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1)i)Are customers getting their products delivered in the same mode as they have selected? ' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Q1)ii)Are customers' width='192'>
      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
      PB3e9v8BQp0q1xjf3CkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1)iii)How many times customer faced problem during product delivery? ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1)iv)Do late delivery lead to returning of the product? ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1)v)Does delivery to some define regions or state have delivery problems?' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q2)ii)More Discount more Profit' width='192'>
      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
      iqW5dfgMuAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2)iii)Early Delivery more Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2)iv)More Products More sales' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2)v)Bigger Market More Sales' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q3)2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
